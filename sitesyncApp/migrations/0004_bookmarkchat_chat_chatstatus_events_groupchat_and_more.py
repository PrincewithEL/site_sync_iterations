# Generated by Django 5.0.6 on 2024-08-25 13:03

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sitesyncApp', '0003_delete_bookmarkchat_delete_chat_delete_chatstatus_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookmarkChat',
            fields=[
                ('bookmark_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'bookmark_chat',
                'db_table_comment': 'This Table Is Used To Store The Bookmarked Chats On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('reply', models.TextField(blank=True, null=True)),
                ('scheduled_at', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=datetime.datetime(2024, 8, 25, 13, 3, 6, 84389, tzinfo=datetime.timezone.utc))),
                ('is_deleted', models.IntegerField()),
                ('file', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'chat_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=75)),
                ('event_details', models.CharField(max_length=80)),
                ('event_date', models.DateField()),
                ('event_start_time', models.TimeField()),
                ('event_end_time', models.TimeField()),
                ('event_location', models.CharField(blank=True, max_length=75, null=True)),
                ('event_link', models.CharField(blank=True, max_length=80, null=True)),
                ('event_status', models.CharField(max_length=9)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('leader_id', models.IntegerField()),
                ('group_name', models.CharField(max_length=75)),
                ('group_image', models.CharField(blank=True, max_length=75, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'group_chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PinnedChat',
            fields=[
                ('pinned_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'pinned_chat',
                'db_table_comment': 'This Table Is Used To Store The Pinned Chats On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectMembers',
            fields=[
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=75)),
                ('status', models.CharField(max_length=75)),
                ('created_at', models.DateTimeField()),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'project_members',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=75)),
                ('project_details', models.CharField(max_length=255)),
                ('project_image', models.CharField(max_length=75)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_days', models.IntegerField()),
                ('estimated_budget', models.FloatField()),
                ('actual_expenditure', models.FloatField()),
                ('balance', models.FloatField()),
                ('project_status', models.CharField(max_length=9)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'projects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('resource_id', models.AutoField(primary_key=True, serialize=False)),
                ('resource_name', models.CharField(max_length=75)),
                ('resource_details', models.CharField(max_length=80)),
                ('resource_directory', models.CharField(max_length=75)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('resource_status', models.CharField(max_length=10)),
                ('resource_type', models.CharField(max_length=8)),
                ('resource_size', models.CharField(max_length=8)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'resources',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('dependant_task_id', models.IntegerField(blank=True, null=True)),
                ('task_name', models.CharField(max_length=75)),
                ('task_details', models.CharField(max_length=80)),
                ('task_given_date', models.DateField()),
                ('task_due_date', models.DateField()),
                ('task_completed_date', models.DateField(blank=True, null=True)),
                ('task_days_left', models.IntegerField()),
                ('task_days_overdue', models.IntegerField()),
                ('task_percentage_complete', models.FloatField()),
                ('task_status', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_name', models.CharField(max_length=75)),
                ('transaction_details', models.CharField(max_length=80)),
                ('transaction_price', models.FloatField()),
                ('transaction_quantity', models.IntegerField()),
                ('transaction_votes_for', models.IntegerField()),
                ('transaction_votes_against', models.IntegerField()),
                ('total_transaction_price', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('transaction_date', models.CharField(max_length=15)),
                ('transaction_time', models.CharField(max_length=15)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_status', models.CharField(max_length=9)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=75)),
                ('gender', models.CharField(max_length=6)),
                ('phone_number', models.CharField(max_length=15)),
                ('email_address', models.CharField(max_length=75, unique=True)),
                ('profile_picture', models.CharField(max_length=75)),
                ('user_type', models.CharField(max_length=13)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.IntegerField()),
                ('online', models.IntegerField()),
                ('password', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
