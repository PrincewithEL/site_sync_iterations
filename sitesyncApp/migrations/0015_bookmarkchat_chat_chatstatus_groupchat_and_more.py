# Generated by Django 5.0.6 on 2024-07-10 00:31

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sitesyncApp', '0014_delete_bookmarkchat_delete_chat_delete_chatstatus_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookmarkChat',
            fields=[
                ('bookmark_id', models.AutoField(db_column='Bookmark_ID', primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_column='Timestamp')),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'bookmark_chat',
                'db_table_comment': 'This Table Is Used To Store The Bookmarked Chats On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chat_id', models.AutoField(db_column='Chat_ID', primary_key=True, serialize=False)),
                ('message', models.TextField(db_column='Message')),
                ('timestamp', models.DateTimeField(db_column='Timestamp', default=django.utils.timezone.now)),
                ('is_deleted', models.IntegerField()),
                ('file', models.TextField(blank=True, db_column='File', null=True)),
            ],
            options={
                'db_table': 'chat',
                'db_table_comment': 'This Table Is Used To Store The Chat Details On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatStatus',
            fields=[
                ('status_id', models.AutoField(db_column='Status_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(db_column='User_ID')),
                ('status', models.IntegerField(db_column='Status')),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'chat_status',
                'db_table_comment': 'This Table Is Used To Store The Chat Status Details On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupChat',
            fields=[
                ('group_id', models.AutoField(db_column='Group_ID', primary_key=True, serialize=False)),
                ('leader_id', models.IntegerField(db_column='Leader_ID')),
                ('group_name', models.CharField(db_column='Group_Name', max_length=75)),
                ('group_image', models.CharField(blank=True, db_column='Group_Image', max_length=75, null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'group_chat',
                'db_table_comment': 'This Table Is Used To Store Groups for the Chat On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectMembers',
            fields=[
                ('member_id', models.AutoField(db_column='Member_ID', primary_key=True, serialize=False)),
                ('user_name', models.CharField(db_column='User_Name', max_length=75)),
                ('status', models.CharField(db_column='status', max_length=75)),
                ('created_at', models.DateTimeField(db_column='Created_At')),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'project_members',
                'db_table_comment': 'This Table Is Used To Store Project Member Details On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project_id', models.AutoField(db_column='Project_ID', primary_key=True, serialize=False)),
                ('project_name', models.CharField(db_column='Project_Name', max_length=75)),
                ('project_details', models.CharField(db_column='Project_Details', max_length=255)),
                ('project_image', models.CharField(db_column='Project_Image', max_length=75)),
                ('created_at', models.DateTimeField(db_column='Created_At')),
                ('updated_at', models.DateTimeField(blank=True, db_column='Updated_At', null=True)),
                ('start_date', models.DateField(db_column='Start_Date')),
                ('end_date', models.DateField(db_column='End_Date')),
                ('total_days', models.IntegerField(db_column='Total_Days')),
                ('estimated_budget', models.FloatField(db_column='Estimated_Budget')),
                ('actual_expenditure', models.FloatField(db_column='Actual_Expenditure')),
                ('balance', models.FloatField(db_column='Balance')),
                ('project_status', models.CharField(db_column='Project_Status', max_length=9)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'projects',
                'db_table_comment': 'This Table Is Used To Store Project Details For the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('resource_id', models.AutoField(db_column='Resource_ID', primary_key=True, serialize=False)),
                ('resource_name', models.CharField(db_column='Resource_Name', max_length=75)),
                ('resource_details', models.CharField(db_column='Resource_Details', max_length=80)),
                ('resource_directory', models.CharField(db_column='Resource_Directory', max_length=75)),
                ('created_at', models.DateTimeField(db_column='Created_At')),
                ('updated_at', models.DateTimeField(blank=True, db_column='Updated_At', null=True)),
                ('resource_status', models.CharField(db_column='Resource_Status', max_length=10)),
                ('resource_type', models.CharField(db_column='Resource_Type', max_length=8)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'resources',
                'db_table_comment': 'This Table Is Used To Store Resource Details On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('task_id', models.AutoField(db_column='Task_ID', primary_key=True, serialize=False)),
                ('dependant_task_id', models.IntegerField(blank=True, db_column='Dependant_Task_ID', null=True)),
                ('task_name', models.CharField(db_column='Task_Name', max_length=75)),
                ('task_details', models.CharField(db_column='Task_Details', max_length=80)),
                ('task_given_date', models.DateField(db_column='Task_Given_Date')),
                ('task_due_date', models.DateField(db_column='Task_Due_Date')),
                ('task_completed_date', models.DateField(blank=True, db_column='Task_Completed_Date', null=True)),
                ('task_days_left', models.IntegerField(db_column='Task_Days_Left')),
                ('task_days_overdue', models.IntegerField(db_column='Task_Days_Overdue')),
                ('task_percentage_complete', models.FloatField(db_column='Task_Percentage_Complete')),
                ('task_status', models.CharField(db_column='Task_Status', max_length=15)),
                ('created_at', models.DateTimeField(db_column='Created_At')),
                ('updated_at', models.DateTimeField(blank=True, db_column='Updated_At', null=True)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'tasks',
                'db_table_comment': 'This Table Is Used To Store Task Details On the System',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('transaction_id', models.AutoField(db_column='Transaction_ID', primary_key=True, serialize=False)),
                ('transaction_name', models.CharField(db_column='Transaction_Name', max_length=75)),
                ('transaction_details', models.CharField(db_column='Transaction_Details', max_length=80)),
                ('transaction_price', models.FloatField(db_column='Transaction_Price')),
                ('transaction_quantity', models.IntegerField(db_column='Transaction_Quantity')),
                ('transaction_votes_for', models.IntegerField(db_column='Transaction_Votes_For')),
                ('transaction_votes_against', models.IntegerField(db_column='Transaction_Votes_Against')),
                ('total_transaction_price', models.FloatField(db_column='Total_Transaction_Price')),
                ('created_at', models.DateTimeField(db_column='Created_At')),
                ('updated_at', models.DateTimeField(blank=True, db_column='Updated_At', null=True)),
                ('transaction_status', models.CharField(db_column='Transaction_Status', max_length=9)),
                ('is_deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'transactions',
                'db_table_comment': 'This Table Is Used To Store Transaction Details On the System',
                'managed': False,
            },
        ),
    ]
